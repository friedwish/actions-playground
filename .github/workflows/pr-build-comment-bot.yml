name: pr_comment_bot

on:
  issue_comment:
    types: [created]

# https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#issue_comment
# https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#issue_comment


# https://docs.github.com/en/actions/using-jobs/defining-outputs-for-jobs

jobs:

  # copied from: https://docs.github.com/en/actions/using-jobs/defining-outputs-for-jobs#example-defining-outputs-for-a-job
  job1:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      output1: ${{ steps.step1.outputs.test }}
      output2: ${{ steps.step2.outputs.test }}
    steps:
      - id: step1
        run: echo "::set-output name=test::hello"
      - id: step2
        run: |
          message=World
          echo "::set-output name=test::$message"
  job2:
    runs-on: ubuntu-latest
    needs: job1
    steps:
      - run: echo ${{needs.job1.outputs.output1}} ${{needs.job1.outputs.output2}}

  pr_commented:
    name: PR comment
    # https://docs.github.com/en/graphql/reference/enums#commentauthorassociation
    # (and https://docs.github.com/en/rest/reference/issues#comments)
    if: ${{ github.event.issue.pull_request && (github.event.comment.author_association == 'OWNER' || github.event.comment.author_association == 'COLLABORATOR') }}
    runs-on: ubuntu-latest
    steps:
      # TODO https://docs.github.com/en/actions/advanced-guides/using-github-cli-in-workflows
      - name: check_command
        run: |
          set -e
          echo "A comment on PR $NUMBER for $REPO"
          echo "Comment:"
          echo "$COMMENT_BODY"
          echo 

          got_command=$(echo "$COMMENT_BODY" | grep -q /test; echo $?)
          if [[ "$got_command" != "0" ]]; then
            echo "command not found - ignoring"
            echo "::set-output name=runDeploy::false"
            exit 0
          fi

          echo
          echo "Dubious manipulation to get a secret.... <start>${SOMETHING_SECRET:0:1} ${SOMETHING_SECRET:1:100}<end>"
          echo 


          echo "gh version"
          gh --version
          echo

          # echo "env:"
          # printenv | sort
          # echo

          echo "get PR repo"
          pr_owner=$(gh pr view $NUMBER --repo $REPO --json headRepositoryOwner | jq -r .headRepositoryOwner.login)
          pr_repo=$(gh pr view $NUMBER --repo $REPO --json headRepository | jq -r .headRepository.name)
          echo "PR from $pr_owner/$pr_repo"

          echo "get ref"
          ref=$(gh pr view $NUMBER --repo $REPO --json potentialMergeCommit | jq -r .potentialMergeCommit.oid)
          echo "potentialMergeCommit ref: $ref"
          ref=$PR_HEAD_SHA
          echo "PR_HEAD_SHA: $ref"
          ref=$GITHUB_SHA
          echo "GITHUB_SHA: $ref"
          ref=$(gh pr view $NUMBER --repo $REPO --json commits | jq -r ".[] | last | .oid")
          echo "last commit ref: $ref"
          echo
          echo "Using ref: $ref"
          echo

          echo "run workflow"
          echo "REPO: $REPO"
          echo "PR Repo: $pr_owner/$pr_repo"
          echo "PR Ref: $ref"

          # # The following fails with: git could not determine base repo: fatal: not a git repository (or any of the parent directories): .git
          # # gh workflow run fake-extended-2 --field ref=$ref --field remote=$pr_owner/$pr_repo 
          # # The following silently does nothing!
          # #echo "{\"ref\":\"main\", \"inputs\": {\"prRef\":\"$ref\",\"remote\":\"$pr_owner/$pr_repo\"}}" | gh api -X POST repos/stuartleeks/actions-playground/actions/workflows/fake-extended-2.yml/dispatches --input -
          # curl -i -u $GITHUB_TOKEN:x-oauth-basic -X POST -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/stuartleeks/actions-playground/actions/workflows/fake-extended-2.yml/dispatches -d "{\"ref\":\"main\", \"inputs\": {\"prRef\":\"$ref\",\"remote\":\"$pr_owner/$pr_repo\"}}"
          # 
          # echo

          # echo "add comment"
          # gh pr comment $NUMBER --repo $REPO --body "started extended workflow"

          echo "Setting outputs"
          echo "::set-output name=prRef::${ref}"
          echo "::set-output name=prRepo::${pr_owner}/${pr_repo}"
          echo "::set-output name=runDeploy::true"
          echo "Done"
        env:
          NUMBER: ${{ github.event.issue.number }}
          ISSUE_URL: ${{ github.event.issue.url }}
          REPO: ${{ github.event.repository.full_name }}
          COMMENT_BODY: ${{ github.event.comment.body }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_HEAD_SHA: ${{ github.event.pull_request.head.sha }}
          SOMETHING_SECRET: ${{ secrets.SOMETHING_SECRET }}

      - name: test1
        run: | 
          echo "PR_REPO: ${PR_REPO}"
        env: 
          PR_REPO: ${{ steps.check_command.outputs.prRepo }}
    outputs:
      runDeploy: ${{ steps.check_command.outputs.runDeploy }}
      prRepo: ${{ steps.check_command.outputs.prRepo }}
      prRef: ${{ steps.check_command.outputs.prRef }}

  test:
    needs: [ pr_commented, job1] 
    runs-on: ubuntu-latest
    steps:
      - run: echo ${{needs.job1.outputs.output1}} ${{needs.job1.outputs.output2}}

      - name: test
        run: |
          echo
          echo "inputs.prRepo: ${{ inputs.prRepo }}"
          echo "PR_REPO: ${PR_REPO}"
          echo
        env:
          PR_REF: ${{ needs.pr_commented.outputs.prRef }}
          PR_REPO: ${{ needs.pr_commented.outputs.prRepo }}

  run_deploy:
    needs: pr_commented
    if: ${{ needs.pr_commented.outputs.runDeploy }} == "true"
    name: Run deploy
    uses: ./.github/workflows/fake-extended-3.yml
    with:
      prRef: ${{ needs.pr_commented.outputs.prRef }}
      prRepo: ${{ needs.pr_commented.outputs.prRepo }}
    secrets:
      SOMETHING_SECRET: ${{ secrets.SOMETHING_SECRET }}
