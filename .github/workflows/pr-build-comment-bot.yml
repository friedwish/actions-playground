name: pr_comment_bot

on:
  issue_comment:
    types: [created]

# https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#issue_comment
# https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#issue_comment


# https://docs.github.com/en/actions/using-jobs/defining-outputs-for-jobs

jobs:

  pr_commented:
    name: PR comment
    # https://docs.github.com/en/graphql/reference/enums#commentauthorassociation
    # (and https://docs.github.com/en/rest/reference/issues#comments)
    if: ${{ github.event.issue.pull_request && (github.event.comment.author_association == 'OWNER' || github.event.comment.author_association == 'COLLABORATOR') }}
    runs-on: ubuntu-latest
    outputs:
      command: ${{ steps.check_command_script.outputs.result }}
      prRepo: ${{ steps.get_pr_details.outputs.prRepo }}
      prRef: ${{ steps.get_pr_details.outputs.prRef }}
      not-md: ${{ steps.get_pr_details.outputs.prRef }}
    steps:
      - id: check_command_script
        name: Check for a command using GitHub script
        uses: actions/github-script@v6
        env:
          SOMETHING_SECRET: ${{ secrets.SOMETHING_SECRET }}
        with:
          result-encoding: string
          script: |
            console.log(context);
            
            const commentBody = context.payload.comment.body;

            switch (commentBody.trim()){
              case "/test":
                return "run-tests";
              case "/help":
                return "show-help";
              default:
                console.log("in default")
                return "none";
            }

      - name: Debug
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Debug...."
          echo "github.event.issue.pull_request: ${{ github.event.issue.pull_request }}"
          echo "github.event.comment.author_association: ${{ github.event.comment.author_association }}"


      - name: Show Help
        if: ${{ steps.check_command_script.outputs.result == 'show-help' }}
        env:
          PR_NUMBER: ${{ github.event.issue.number }}
          REPO: ${{ github.event.repository.full_name }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Showing help on PR ${PR_NUMBER}"
          gh pr comment ${PR_NUMBER} --repo $REPO --body "Hello<br/><br/>You can use the following commands:<br/>    /test - run tests on a PR<br/>    /help - show this help"

      - id: get_pr_details
        name: Get PR details
        if: ${{ steps.check_command_script.outputs.result == 'run-tests' }}
        env:
          PR_NUMBER: ${{ github.event.issue.number }}
          REPO: ${{ github.event.repository.full_name }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Could look at moving this to GitHub Script action as well

          echo "Getting PR repo..."
          pr_owner=$(gh pr view $PR_NUMBER --repo $REPO --json headRepositoryOwner | jq -r .headRepositoryOwner.login)
          pr_repo=$(gh pr view $PR_NUMBER --repo $REPO --json headRepository | jq -r .headRepository.name)
          echo -e "\tPR from $pr_owner/$pr_repo"

          echo "Getting PR ref..."
          ref=$(gh pr view $PR_NUMBER --repo $REPO --json commits | jq -r ".[] | last | .oid")
          echo -e "\tLatest commit ref: $ref"
          echo

          echo "Setting outputs"
          echo "::set-output name=prRef::${ref}"
          echo "::set-output name=prRepo::${pr_owner}/${pr_repo}"
          echo "Done"

          echo ${GITHUB_REF}

  run_test:
    needs: [pr_commented]
    if: ${{ needs.pr_commented.outputs.command == 'run-tests' && needs.pr_commented.outputs.not-md == 'true'}}
    name: Run deploy
    uses: ./.github/workflows/fake-extended-3.yml
    with:
      prRef: ${{ needs.pr_commented.outputs.prRef }}
      prRepo: ${{ needs.pr_commented.outputs.prRepo }}
    secrets:
      SOMETHING_SECRET: ${{ secrets.SOMETHING_SECRET }}
