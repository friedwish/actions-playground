name: pr_comment_bot

on:
  issue_comment:
    types: [created]

# https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#issue_comment
# https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#issue_comment


jobs:
  pr_commented:
    name: PR comment
    # https://docs.github.com/en/graphql/reference/enums#commentauthorassociation
    # (and https://docs.github.com/en/rest/reference/issues#comments)
    if: ${{ github.event.issue.pull_request && (github.event.comment.author_association == 'OWNER' || github.event.comment.author_association == 'COLLABORATOR') }}
    runs-on: ubuntu-latest
    steps:
      # TODO https://docs.github.com/en/actions/advanced-guides/using-github-cli-in-workflows
      - name: check_command
        run: |
          set -e
          echo "A comment on PR $NUMBER for $REPO"
          echo "Comment:"
          echo "$COMMENT_BODY"
          echo 

          got_command=$(echo "$COMMENT_BODY" | grep -q /test; echo $?)
          if [[ "$got_command" != "0" ]]; then
            echo "command not found - ignoring"
            exit 0
          fi

          echo "gh version"
          gh --version
          echo

          # echo "env:"
          # printenv | sort
          # echo

          echo "get PR repo"
          pr_owner=$(gh pr view $NUMBER --repo $REPO --json headRepositoryOwner | jq -r .headRepositoryOwner.login)
          pr_repo=$(gh pr view $NUMBER --repo $REPO --json headRepository | jq -r .headRepository.name)
          echo "PR from $pr_owner/$pr_repo"

          echo "get ref"
          ref=$(gh pr view $NUMBER --repo $REPO --json potentialMergeCommit | jq -r .potentialMergeCommit.oid)
          echo "potentialMergeCommit ref: $ref"
          ref=$PR_HEAD_SHA
          echo "PR_HEAD_SHA: $ref"
          ref=$GITHUB_SHA
          echo "GITHUB_SHA: $ref"
          ref=$(gh pr view $NUMBER --repo $REPO --json commits | jq -r ".[] | last | .oid")
          echo "last commit ref: $ref"
          echo
          echo "Using ref: $ref"
          echo

          echo "run workflow"
          echo "REPO: $REPO"
          # gh workflow run fake-extended --repo $REPO --ref $ref
          # gh api -X POST repos/stuartleeks/actions-playground/actions/workflows/fake-extended-2.yml/dispatches -F ref=$ref
          # gh workflow run fake-extended-2 --field ref=$ref --field remote=$pr_owner/$pr_repo # get could not determine base repo: fatal: not a git repository (or any of the parent directories): .git
          echo "{\"ref\":\"main\", \"inputs\": {\"prRef\":\"$ref\",\"remote\":\"$pr_owner/$pr_repo\"}}" | gh api -X POST repos/stuartleeks/actions-playground/actions/workflows/fake-extended-2.yml/dispatches --input -
          echo

          echo "add comment"
          gh pr comment $NUMBER --repo $REPO --body "started extended workflow"
        env:
          NUMBER: ${{ github.event.issue.number }}
          ISSUE_URL: ${{ github.event.issue.url }}
          REPO: ${{ github.event.repository.full_name }}
          COMMENT_BODY: ${{ github.event.comment.body }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_HEAD_SHA: ${{ github.event.pull_request.head.sha }}