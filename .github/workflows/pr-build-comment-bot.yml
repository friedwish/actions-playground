name: pr_comment_bot

on:
  issue_comment:
    types: [created]

# https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#issue_comment
# https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#issue_comment


# https://docs.github.com/en/actions/using-jobs/defining-outputs-for-jobs

jobs:

  pr_commented:
    name: PR comment
    # https://docs.github.com/en/graphql/reference/enums#commentauthorassociation
    # (and https://docs.github.com/en/rest/reference/issues#comments)
    if: ${{ github.event.issue.pull_request && (github.event.comment.author_association == 'OWNER' || github.event.comment.author_association == 'COLLABORATOR') }}
    runs-on: ubuntu-latest
    outputs:
      runDeploy: ${{ steps.check_command.outputs.runDeploy }}
      prRepo: ${{ steps.check_command.outputs.prRepo }}
      prRef: ${{ steps.check_command.outputs.prRef }}
      command: ${{ steps.check_command_script.outputs.result }}
    steps:
      - id: check_command_script
        name: Check for a command using GitHub script
        uses: actions/github-script@v6
        env:
          SOMETHING_SECRET: ${{ secrets.SOMETHING_SECRET }}
        with:
          script: |
            console.log("Hello from GH script");
            const commentBody = context.payload.comment.body;

            switch (commentBody.trim() != "/test"){
              case "/test":
                console.log("in /test")
                return {
                  action: "test"
                };
              default:
                console.log("in default")
                return {
                  action: "none"
                };
            }
      
      - name: debug
        env:
          COMMENT_ACTION: ${{ steps.check_command_script.outputs.result.action }}
        run: |
          echo "COMMENT_ACTION: ${COMMENT_ACTION}"
          echo "output.Action: ${{ steps.check_command_script.outputs.result.action }}
          echo "output: ${{ steps.check_command_script.outputs.result }}

      - id: check_command
        name: Check for a command
        run: |
          set -e
          echo "A comment on PR $NUMBER for $REPO"
          echo "Comment:"
          echo "$COMMENT_BODY"
          echo 

          got_command=$(echo "$COMMENT_BODY" | grep -q /test; echo $?)
          if [[ "$got_command" != "0" ]]; then
            echo "command not found - ignoring"
            echo "::set-output name=runDeploy::false"
            exit 0
          fi

          echo
          echo "Dubious manipulation to get a secret.... <start>${SOMETHING_SECRET:0:1} ${SOMETHING_SECRET:1:100}<end>"
          echo 

          echo "Getting PR repo..."
          pr_owner=$(gh pr view $NUMBER --repo $REPO --json headRepositoryOwner | jq -r .headRepositoryOwner.login)
          pr_repo=$(gh pr view $NUMBER --repo $REPO --json headRepository | jq -r .headRepository.name)
          echo -e "\tPR from $pr_owner/$pr_repo"

          echo "Getting PR ref..."
          ref=$(gh pr view $NUMBER --repo $REPO --json commits | jq -r ".[] | last | .oid")
          echo -e "\tLatest commit ref: $ref"
          echo

          echo "Setting outputs"
          echo "::set-output name=prRef::${ref}"
          echo "::set-output name=prRepo::${pr_owner}/${pr_repo}"
          echo "::set-output name=runDeploy::true"
          echo "Done"
        env:
          NUMBER: ${{ github.event.issue.number }}
          ISSUE_URL: ${{ github.event.issue.url }}
          REPO: ${{ github.event.repository.full_name }}
          COMMENT_BODY: ${{ github.event.comment.body }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_HEAD_SHA: ${{ github.event.pull_request.head.sha }}
          SOMETHING_SECRET: ${{ secrets.SOMETHING_SECRET }}

  output_test:
    runs-on: ubuntu-latest
    needs: pr_commented
    steps:
      - name: test GH script output
        env:
          COMMENT_ACTION: ${{ needs.pr_commented.outputs.command.action }}
        run: |
          echo "COMMENT_ACTION: ${COMMENT_ACTION}"
        


  run_test:
    needs: pr_commented
    if: ${{ needs.pr_commented.outputs.runDeploy }} == "true"
    name: Run deploy
    uses: ./.github/workflows/fake-extended-3.yml
    with:
      prRef: ${{ needs.pr_commented.outputs.prRef }}
      prRepo: ${{ needs.pr_commented.outputs.prRepo }}
    secrets:
      SOMETHING_SECRET: ${{ secrets.SOMETHING_SECRET }}
